namespace std;

meta = function(t, add = true){
	t@ = add ? {
		_get = ..table.map(..table, function(v){
			return lambda(...) v(owner,...)
		});
		_float = true;
	} : null
}

reducex = function(t, f,...){
    if( type(f) !="table" ) f = {f,...};
    return reduce(f, lambda(t, f) f(t), t);
};

unless = function(p,f) if(!p) f()
times = function(n, f) for(i=1;n) f(i)
forEach = function(t,f) for(k,v in t) f(v,k)

tap = function(v){
	return lambda(f) unless ( 
		!(type(f)==="function")
		,λ()..console.dumpJson(
			["参数值"] = v,
			["返回值"] = f(v) || "No return values!"
	))
}

// -----------------------------------------------------
..tap = tap;
..meta = meta;
..unless = unless;
..times = times;
..forEach = forEach;
..table.reduce = reducex;
